# Generated from lib/chapter3/basic.rb with RBS::Inline

module Chapter3
  class Checker
    # : (untyped, untyped) -> untyped
    def self.typecheck: (untyped, untyped) -> untyped

    # : (untyped, untyped) -> untyped
    def self.typeEq: (untyped, untyped) -> untyped
  end
end

type Chapter3::term = { tag: "true" } | { tag: "false" } | { tag: "if", cond: Chapter3::term, thn: Chapter3::term, els: Chapter3::term } | { tag: "number", n: Integer } | { tag: "add", left: Chapter3::term, right: Chapter3::term } | { tag: "var", name: string } | { tag: "func", params: Array[Chapter3::param], body: Chapter3::term } | { tag: "call", func: Chapter3::term, args: Array[Chapter3::term] }

type Chapter3::param = { name: string, type: untyped }

type Chapter3::typeEnv = Hash[string, untyped]
